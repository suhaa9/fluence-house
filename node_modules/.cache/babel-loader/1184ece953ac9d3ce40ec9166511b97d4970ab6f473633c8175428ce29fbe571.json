{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suha Saleem\\\\Downloads\\\\fluence-house\\\\src\\\\pages\\\\public\\\\influencer\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { auth, db } from \"../../../firebase\";\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport InfluencerNavbar from \"../../../components/InfluencerNavbar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [profile, setProfile] = useState({\n    name: \"\",\n    bio: \"\",\n    instagram: \"\",\n    niche: \"\",\n    location: \"\",\n    followers: \"\",\n    contentType: \"\",\n    otherLinks: \"\",\n    age: \"\",\n    profilePhoto: \"\"\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchProfile = async () => {\n      const user = auth.currentUser;\n      if (!user) return;\n      const docRef = doc(db, \"users\", user.uid);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        setProfile(prev => ({\n          ...prev,\n          ...data\n        }));\n      }\n      setLoading(false);\n    };\n    fetchProfile();\n  }, []);\n  const handleChange = e => {\n    setProfile({\n      ...profile,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSave = async () => {\n    const user = auth.currentUser;\n    if (!user) return;\n    const requiredFields = [\"name\", \"bio\", \"instagram\", \"niche\", \"location\", \"followers\", \"contentType\", \"otherLinks\", \"age\", \"profilePhoto\"];\n    for (const field of requiredFields) {\n      if (!profile[field]) {\n        alert(`Please fill in the \"${field}\" field.`);\n        return;\n      }\n    }\n    const docRef = doc(db, \"users\", user.uid);\n    await setDoc(docRef, {\n      ...profile,\n      email: user.email,\n      role: \"influencer\"\n    }, {\n      merge: true\n    });\n    alert(\"Profile updated!\");\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfluencerNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-xl mx-auto p-6 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-purple-600 text-center\",\n        children: \"My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), [{\n        label: \"Full Name\",\n        name: \"name\"\n      }, {\n        label: \"Short Bio\",\n        name: \"bio\",\n        isTextarea: true\n      }, {\n        label: \"Instagram Handle\",\n        name: \"instagram\"\n      }, {\n        label: \"Niche (e.g., fashion, tech)\",\n        name: \"niche\"\n      }, {\n        label: \"Location\",\n        name: \"location\"\n      }, {\n        label: \"Follower Count\",\n        name: \"followers\"\n      }, {\n        label: \"Content Type (e.g., Reels, Vlogs)\",\n        name: \"contentType\"\n      }, {\n        label: \"Other Social Links\",\n        name: \"otherLinks\"\n      }, {\n        label: \"Age\",\n        name: \"age\"\n      }, {\n        label: \"Profile Photo URL\",\n        name: \"profilePhoto\"\n      }].map(({\n        label,\n        name,\n        isTextarea\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), isTextarea ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full p-2 border rounded\",\n          name: name,\n          value: profile[name],\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-full p-2 border rounded\",\n          type: \"text\",\n          name: name,\n          value: profile[name],\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"bg-purple-600 text-white px-4 py-2 mt-4 rounded hover:bg-purple-700 w-full\",\n        children: \"Save Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Profile, \"wNayWV13O++2JdX0Ht4la9kuxAI=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","auth","db","doc","getDoc","setDoc","InfluencerNavbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","profile","setProfile","name","bio","instagram","niche","location","followers","contentType","otherLinks","age","profilePhoto","loading","setLoading","fetchProfile","user","currentUser","docRef","uid","docSnap","exists","data","prev","handleChange","e","target","value","handleSave","requiredFields","field","alert","email","role","merge","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","isTextarea","map","onChange","required","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Suha Saleem/Downloads/fluence-house/src/pages/public/influencer/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { auth, db } from \"../../../firebase\";\r\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport InfluencerNavbar from \"../../../components/InfluencerNavbar\";\r\n\r\nconst Profile = () => {\r\n  const [profile, setProfile] = useState({\r\n    name: \"\",\r\n    bio: \"\",\r\n    instagram: \"\",\r\n    niche: \"\",\r\n    location: \"\",\r\n    followers: \"\",\r\n    contentType: \"\",\r\n    otherLinks: \"\",\r\n    age: \"\",\r\n    profilePhoto: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      const user = auth.currentUser;\r\n      if (!user) return;\r\n\r\n      const docRef = doc(db, \"users\", user.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const data = docSnap.data();\r\n        setProfile((prev) => ({\r\n          ...prev,\r\n          ...data,\r\n        }));\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setProfile({ ...profile, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const user = auth.currentUser;\r\n    if (!user) return;\r\n\r\n    const requiredFields = [\r\n      \"name\", \"bio\", \"instagram\", \"niche\", \"location\",\r\n      \"followers\", \"contentType\", \"otherLinks\", \"age\", \"profilePhoto\"\r\n    ];\r\n\r\n    for (const field of requiredFields) {\r\n      if (!profile[field]) {\r\n        alert(`Please fill in the \"${field}\" field.`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const docRef = doc(db, \"users\", user.uid);\r\n    await setDoc(\r\n      docRef,\r\n      { ...profile, email: user.email, role: \"influencer\" },\r\n      { merge: true }\r\n    );\r\n    alert(\"Profile updated!\");\r\n  };\r\n\r\n  if (loading) return <div className=\"p-4\">Loading...</div>;\r\n\r\n  return (\r\n    <>\r\n      <InfluencerNavbar />\r\n      <div className=\"max-w-xl mx-auto p-6 mt-4\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-purple-600 text-center\">\r\n          My Profile\r\n        </h2>\r\n\r\n        {/* Profile Form Fields */}\r\n        {[\r\n          { label: \"Full Name\", name: \"name\" },\r\n          { label: \"Short Bio\", name: \"bio\", isTextarea: true },\r\n          { label: \"Instagram Handle\", name: \"instagram\" },\r\n          { label: \"Niche (e.g., fashion, tech)\", name: \"niche\" },\r\n          { label: \"Location\", name: \"location\" },\r\n          { label: \"Follower Count\", name: \"followers\" },\r\n          { label: \"Content Type (e.g., Reels, Vlogs)\", name: \"contentType\" },\r\n          { label: \"Other Social Links\", name: \"otherLinks\" },\r\n          { label: \"Age\", name: \"age\" },\r\n          { label: \"Profile Photo URL\", name: \"profilePhoto\" },\r\n        ].map(({ label, name, isTextarea }) => (\r\n          <div key={name} className=\"mb-3\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              {label}\r\n            </label>\r\n            {isTextarea ? (\r\n              <textarea\r\n                className=\"w-full p-2 border rounded\"\r\n                name={name}\r\n                value={profile[name]}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            ) : (\r\n              <input\r\n                className=\"w-full p-2 border rounded\"\r\n                type=\"text\"\r\n                name={name}\r\n                value={profile[name]}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n        <button\r\n          onClick={handleSave}\r\n          className=\"bg-purple-600 text-white px-4 py-2 mt-4 rounded hover:bg-purple-700 w-full\"\r\n        >\r\n          Save Profile\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}